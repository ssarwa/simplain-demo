# Maven package Java project Web App to Linux on Azure
# Build your Java project and deploy it to Azure as a Linux web app
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

variables:

  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: 'c66169ff-79d1-4962-b729-bd34224b986f'
  
  # Web app name
  webAppName: 'simplain-demo'

  # Environment name
  environmentName: 'simplain-demo'
  
  # Agent VM image name
  vmImageName: 'ubuntu-latest'
  adminPassword: 'Azure1234!@#$'

stages:

- stage: AzureResourceManagerTemplateDeployment
  displayName: 'ARM Template deployment'
  jobs:
  - job: DeployInfra
    displayName: Deploy Infrastructure
    pool:
      vmImage: $(vmImageName)
    
    steps:
      - task: AzureResourceManagerTemplateDeployment@3
        inputs:
          deploymentScope: 'Resource Group'
          azureResourceManagerConnection: 'Azure CXP FTA Internal Subscription ssarwa (12bb4e89-4f7a-41e0-a38f-b22f079248b4)'
          subscriptionId: $(azureSubscription)
          action: 'Create Or Update Resource Group'
          resourceGroupName: 'Simplain-RG-ARM'
          location: 'West US'
          templateLocation: 'Linked artifact'
          csmFile: 'arm-template-deployment/azuredeploy.json'
          csmParametersFile: 'arm-template-deployment/parameters.json'
          overrideParameters: '-adminPassword "$(adminPassword)"'
          deploymentMode: 'Incremental'

- stage: Build
  displayName: Build stage
  jobs:
  - job: MavenPackageAndPublishArtifacts
    displayName: Maven Package and Publish Artifacts
    pool:
      vmImage: $(vmImageName)
    
    steps:
    - task: Maven@3
      displayName: 'Maven Package'
      inputs:
        mavenPomFile: 'pom.xml'

    - task: CopyFiles@2
      displayName: 'Copy Files to artifact staging directory'
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: '**/target/*.?(war|jar)'
        TargetFolder: $(Build.ArtifactStagingDirectory)

    - upload: $(Build.ArtifactStagingDirectory)
      artifact: drop

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeployLinuxWebApp
    displayName: Deploy Linux Web App
    environment: $(environmentName)
    pool: 
      vmImage: $(vmImageName)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            displayName: 'Azure Web App Deploy: simplain-demo'
            inputs:
              azureSubscription: $(azureSubscription)
              appType: webAppLinux
              appName: $(webAppName)
              package: '$(Pipeline.Workspace)/drop/**/target/*.?(war|jar)'
